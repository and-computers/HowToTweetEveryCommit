#!/bin/sh


# PATH to the repository of interest
export PATH=$PATH:{{MY_REPO_PATH}}.git/hooks

toplevel_path=`git rev-parse --show-toplevel`
toplevel_dir=`basename "$toplevel_path"`

# this variable holds the branch you are working on
branch=`git rev-parse --abbrev-ref HEAD`
# this variable holds the actual commit message
subject=`git log --pretty=format:%s -n1`
# this variables adds some hashtags to your tweet "#Repository: #(name of your repo)"
# we also replace "-" with "_" to keep hashtag repo names together
hashtags="Repository: #{$toplevel_dir//-/_}"
#the tweet itself is thee hashtags plus the branch name plus the commit message
tweet=$hashtags' ['$branch']: "'$subject'"'

# truncate tweets that are longer than 280 characters
if [ ${#tweet} -gt 280 ]
    then
        tweet_trunc=$(echo $tweet | cut -c1-277)
        tweet=${tweet_trunc}...
fi
echo $tweet
# Write a full path to where you put the post_commit_hook.py so it is executed
# the $tweet variable is the command line argument that will be passed to the python script
python {{MY_REPO_PATH}}.git/hooks/post_commit_hook_autogen.py $tweet